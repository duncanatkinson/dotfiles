set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

Plugin 'tpope/vim-git'
Plugin 'vim-ruby/vim-ruby'
Plugin 'jelera/vim-javascript-syntax'
" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
"Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
"Plugin 'L9'
" Git plugin not hosted on GitHub
"Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
"Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Avoid a name conflict with L9
"Plugin 'user/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just
" :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to
" auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line



" Syntax
"Plug 'moll/vim-node'
"Plug 'pangloss/vim-javascript'
"Plug 'othree/html5.vim'
"Plug 'leshill/vim-json'
"Plug 'tpope/vim-markdown'
"Plug 'andersoncustodio/vim-tmux'
"Plug '1995eaton/vim-better-javascript-completion'
"Plug 'mustache/vim-mustache-handlebars'
"Plug 'mxw/vim-jsx'
"Plug 'digitaltoad/vim-jade'
"Plug 'elixir-lang/vim-elixir'
"Plug 'cespare/vim-go-templates'

"Clojure plugins from Jamie
"Plug 'guns/vim-sexp', { 'for': 'clojure' }
"Plug 'tpope/vim-sexp-mappings-for-regular-people', { 'for': 'clojure' }
"Plug 'tpope/vim-leiningen', { 'for': 'clojure' }
"Plug 'tpope/vim-classpath', { 'for': 'clojure' }
"Plug 'tpope/vim-fireplace', { 'for': 'clojure' }
"Plug 'guns/vim-clojure-static', { 'for': 'clojure' }
"Plug 'guns/vim-clojure-highlight', { 'for': 'clojure' }
"Plug 'luochen1990/rainbow', { 'for': 'clojure' }

" Actual Plugs
"Plug 'tpope/vim-endwise'
"Plug 'tpope/vim-surround'
"Plug 'kien/ctrlp.vim'
"Plug 'SirVer/ultisnips'
"Plug 'christoomey/vim-tmux-navigator'
"Plug 'tpope/vim-rbenv'
"Plug 'tpope/vim-eunuch'
"Plug 'tpope/vim-repeat'
"Plug 'editorconfig/editorconfig-vim'
"Plug 'rking/ag.vim'
"Plug 'tpope/vim-commentary'
"Plug 'tpope/vim-fugitive'
"Plug 'ahw/vim-pbcopy'
"Plug 'tpope/vim-ragtag'
"Plug 'AndrewRadev/splitjoin.vim'
"Plug 'tpope/vim-rails'
"Plug 'tpope/vim-unimpaired'
"Plug 'gorkunov/smartpairs.vim'
"Plug 'thinca/vim-visualstar'
"Plug 'tpope/vim-vinegar'
"Plug 'junegunn/vim-peekaboo'
"Plug 'christoomey/vim-tmux-runner'
"Plug 'thoughtbot/vim-rspec'
"Plug 'rizzatti/dash.vim'


" automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =

" wrap quickfix window
autocmd FileType qf setlocal wrap linebreak

" status bar
set statusline=%F%m%r%h%w\  "fullpath and status modified sign
set statusline+=\ %y "filetype


" assume the /g flag on :s substitutions to replace all matches in a line
set gdefault

set autoread

" fix slight delay after pressing ESC then O
" http://ksjoberg.com/vim-esckeys.html
" set noesckeys
set timeout timeoutlen=500 ttimeoutlen=100

set nofoldenable

set history=10000

set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set autoindent

set ignorecase smartcase

set spelllang=en_gb
syntax spell toplevel

autocmd FileType markdown setlocal shiftwidth=4 softtabstop=4 tabstop=4 wrap linebreak nolist wrap lbr colorcolumn=0

" ruby syntax highlighting is slower with the newer engine
autocmd FileType ruby setlocal regexpengine=1

set laststatus=2

set linebreak

set incsearch
set hlsearch

set scrolloff=10

set nobackup
set nowritebackup
set noswapfile


set backspace=indent,eol,start

set wildmode=full
set wildmenu

let mapleader=","
noremap \ ,

set wildignore+=*.o,*.obj,.git,node_modules,_site,*.class,*.zip,*.aux

set number
set relativenumber

" pretty colours
set background=light

set colorcolumn=120

set list listchars=tab:»·,trail:·

set splitbelow
set splitright

set tags=./.tags;

set lazyredraw
